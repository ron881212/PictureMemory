{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","shuffle","deck","id","Wrapper","children","NavBar","this","score","topScore","React","Component","App","state","friends","count","winCondition","choices","handleChange","_this","alert","setState","points","includes","filter","left","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this2","components_NavBar_NavBar","onChange","components_Wrapper","map","friend","components_FriendCard","key","handleIncrement","ReactDOM","render","src_App","document","getElementById"],"mappings":"yxDAoBeA,MAjBf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAChCC,QAAS,kBAAKT,EAAMU,QAAQV,EAAMW,KAAMX,EAAMY,QAEjDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCHNS,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,kBCwB1BC,0LAlBX,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,eAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,GAAGQ,GAAG,gBAApB,6BAGAX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,GAAGQ,GAAG,SAApB,UACQI,KAAKhB,MAAMiB,MADnB,iBACwCD,KAAKhB,MAAMkB,mBAhB9CC,IAAMC,YC0FZC,6MAtFbC,MAAQ,CACNC,QAASA,EACTC,MAAO,EACPN,SAAU,EACVO,aAAc,EACdC,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,OAGpCC,aAAe,WACkB,KAA5BC,EAAKN,MAAMG,eACZI,MAAM,WACND,EAAKE,SAAS,CACZJ,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IAClCD,aAAc,QAKpBM,OAAS,SAAAnB,GACPgB,EAAKE,SAAS,CAAEP,YAGVK,EAAKN,MAAMI,QAAQM,SAASpB,GAMtBgB,EAAKN,MAAMI,QAAQM,SAASpB,IACpCgB,EAAKE,SAAS,CACZL,aAAcG,EAAKN,MAAMG,aAAe,EACxCP,SAAUU,EAAKN,MAAMJ,SAAW,EAChCQ,QAASE,EAAKN,MAAMI,QAAQO,OAAO,SAAAC,GAAI,OAAIA,IAAStB,OATtDiB,MAAM,aACND,EAAKE,SAAS,CACZJ,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,IAClCD,aAAc,QAYtBf,QAAU,SAACyB,EAAOvB,GAMhB,IAJA,IACIwB,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAKvB,OADAR,EAAKG,OAAOnB,GACLuB,2EAKA,IAAAQ,EAAA3B,KACP,OACIf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyC,EAAD,CACE3B,MAAOD,KAAKM,MAAMG,aAClBP,SAAUF,KAAKM,MAAMJ,SACrB2B,SAAU7B,KAAKW,iBACjB1B,EAAAC,EAAAC,cAAC2C,EAAD,KACC9B,KAAKM,MAAMC,QAAQwB,IAAI,SAAAC,GAAM,OAC5B/C,EAAAC,EAAAC,cAAC8C,EAAD,CACErC,GAAIoC,EAAOpC,GACXsC,IAAKF,EAAOpC,GACZJ,MAAOwC,EAAOxC,MACd2C,gBAAiBR,EAAKQ,gBACtBzC,QAASiC,EAAKjC,QACdC,KAAMgC,EAAKrB,MAAMC,qBA/EXH,mBCDlBgC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.93e98d4c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image}\n         onClick={()=> props.shuffle(props.deck, props.id)} />\n      </div>\n      <div className=\"content\">\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n      <p>Shuffle</p> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from 'react'\n// import OnePiece from '../CharacterCard/OnePiece'\nimport \"./style.css\";\n\nclass NavBar extends React.Component {\n\n    \nrender(){\n    // console.log(OnePiece);\n    \n    return(\n        <nav className=\"navbar navbar-expand-lg sticky-top mb-5 p-3\">\n            <ul className=\"navbar-nav\">\n                <li className=\"navbar-brand\">\n                Memory Game\n                </li>\n                <li className=\"\" id=\"instructions\">\n                Click an image to begain { }\n                </li>\n                <li className=\"\" id=\"score\">\n                Score: {this.props.score} | Top Score: {this.props.topScore} \n                </li>\n            </ul>\n        </nav>\n    )\n}\n}\n\nexport default NavBar","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport NavBar from \"./components/NavBar/NavBar\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends: friends,\n    count: 0,\n    topScore: 0,\n    winCondition: 0,\n    choices: [1,2,3,4,5,6,7,8,9,10,11,12]\n  };\n\n  handleChange = () => {\n    if(this.state.winCondition === 12){\n      alert(\"You win\")\n      this.setState({\n        choices: [1,2,3,4,5,6,7,8,9,10,11,12],\n        winCondition: 0\n      });\n    }\n  }\n\n  points = id => {\n    this.setState({ friends });\n\n    // for(let i = 0; i < this.state.choices.length; i++){\n      if(!this.state.choices.includes(id)){\n        alert('Try Again')\n        this.setState({\n          choices: [1,2,3,4,5,6,7,8,9,10,11,12],\n          winCondition: 0\n        });\n      } else if(this.state.choices.includes(id)){\n        this.setState({ \n          winCondition: this.state.winCondition + 1,\n          topScore: this.state.topScore + 1,\n          choices: this.state.choices.filter(left => left !== id)\n        });   \n      }\n    // }\n  }\n\n  shuffle = (array, id) => {\n\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    // this.setState({ friends: array, count: this.state.count + 1 });\n    this.points(id)\n    return array;\n  \n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n        <div>\n        <NavBar\n          score={this.state.winCondition} \n          topScore={this.state.topScore}\n          onChange={this.handleChange()}/>\n        <Wrapper>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            handleIncrement={this.handleIncrement}\n            shuffle={this.shuffle}\n            deck={this.state.friends}\n          />\n        ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}